@model pizzashop_Repository.ViewModel.ChangePasswordModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content" id="content">
    <form asp-action="changePassword" asp-controller="Auth" method="post" id="passwordForm">
        <div class="row flex-column changePassword">

            <div class="col mt-3">
                <p>Enter a new password To Update Your credintials</p>
            </div>
            <div class="col">
                <div class="input-group d-flex-column">
                    <input type="password" class="form-control password-field" placeholder="current password"
                        asp-for="CurrentPassword" aria-label="password">

                    @* <input type="password" asp-for="Password" class="form-control bg-white password-field"
                                    id="Password" placeholder="New Password" aria-label="password"> *@
                    <span class="input-group-text m-0 password-toggle-icon">
                        <i class="fa-regular fa-eye-slash"></i>
                    </span>
                </div>

            </div>
            <div class="col mt-3">
                <div class="input-group d-flex-column">
                    <input type="password" class="form-control password-field" id="NewPassword"
                        placeholder="new password" asp-for="NewPassword" aria-label="password">
                    <span class="input-group-text m-0 password-toggle-icon">
                        <i class="fa-regular fa-eye-slash"></i>
                    </span>
                </div>
                <div class="password-error error-message mb-3"></div>
            </div>
            <div class="col mt-3">
                <div class="input-group d-flex-column">
                    <input type="password" class="form-control password-field" id="ConfirmNewPassword"
                        placeholder="confirm new password" asp-for="ConfirmNewPassword" aria-label="password">
                    <span class="input-group-text m-0 password-toggle-icon">
                        <i class="fa-regular fa-eye-slash"></i>
                    </span>
                </div>
                <div class="password-error error-message mb-3"></div>
            </div>
        </div>
        <div class="footer d-flex  mt-3">
            <div>
                <button type="button" id="tempSubmitButton" class="btn create-user me-2" data-bs-toggle="modal"
                    data-bs-target="#exampleModal">Submit</button>
            </div>
            <div>
                <button type="button" class="btn cancel">cancel</button>
            </div>
        </div>
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="header d-flex justify-content-between m-2">
                        <h5 class="modal-title">Delete Confirmation</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body d-flex-column justify-content-center align-items-centera">
                        <div class="d-flex justify-content-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor"
                                class="bi bi-exclamation-triangle text-warning mb-2" viewBox="0 0 16 16">
                                <path
                                    d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z">
                                </path>
                                <path
                                    d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z">
                                </path>
                            </svg>
                        </div>
                        <div class="d-flex justify-content-center">
                            <h5>Are you sure you want to delete this user</h5>
                        </div>
                    </div>
                    <div class="footer d-flex align-items-center justify-content-center mb-2">
                        <div>
                            <button type="submit" class="btn create-user me-2">Yes</button>
                        </div>
                        <div>
                            <button type="button" class="btn cancel" data-bs-dismiss="modal"
                                aria-label="Close">No</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<script>
    const passwordFields = document.querySelectorAll(".password-field");
    const passwordToggleIcons = document.querySelectorAll(".password-toggle-icon i");
    passwordToggleIcons.forEach((toggleIcon, index) => {
        toggleIcon.addEventListener("click", () => {
            const passwordField = passwordFields[index];

            if (passwordField.type === "password") {
                passwordField.type = "text";
                toggleIcon.classList.remove("fa-eye-slash");
                toggleIcon.classList.add("fa-eye");
            } else {
                passwordField.type = "password";
                toggleIcon.classList.remove("fa-eye");
                toggleIcon.classList.add("fa-eye-slash");
            }
        });
    });

    $(document).ready(function () {
        let passwordField = $("#NewPassword");
        let confirmPasswordField = $("#ConfirmNewPassword");
        let errorMessage = $(".password-error");

        function isValidPassword(password) {
            let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,}$/;
            return passwordRegex.test(password);
        }

        $("#tempSubmitButton").click(function (event) {  // Change from .submit() to .click()
            let isValid = true;
            let passwordVal = passwordField.val().trim();
            let confirmPasswordVal = confirmPasswordField.val().trim();

            errorMessage.text("").css("color", "");

            if (passwordVal === "") {
                passwordField.next(".password-error").text("Password is required.").css("color", "red");
                isValid = false;
            } else if (!isValidPassword(passwordVal)) {
                passwordField.next(".password-error").text("Password must have at least 8 characters, including an uppercase, lowercase, number, and special character.").css("color", "red");
                isValid = false;
            }

            if (confirmPasswordVal === "") {
                confirmPasswordField.next(".password-error").text("Confirm Password is required.").css("color", "red");
                isValid = false;
            } else if (confirmPasswordVal !== passwordVal) {
                confirmPasswordField.next(".password-error").text("Passwords do not match.").css("color", "red");
                isValid = false;
            }

            if (!isValid) {
                event.preventDefault(); // Prevent modal from opening if validation fails
            } else {
                $("#exampleModal").modal("show"); // Open modal only if validation passes
            }
        });


        $(".modal .create-user").click(function () {
            $("#passwordForm").submit();
        });

        passwordField.keyup(function () {
            passwordField.next(".password-error").text("");
        });

        confirmPasswordField.keyup(function () {
            confirmPasswordField.next(".password-error").text("");
        });
    });
    $(document).ready(function () {
        @if (TempData["Success"] != null)
            {
                <text>toastr.success('@TempData["Success"]');</text>
        }
            @if (TempData["Error"] != null)
            {
                <text>toastr.error('@TempData["Error"]');</text>
        }
            @if (TempData["Warning"] != null)
            {
                <text>toastr.warning('@TempData["Warning"]');</text>
        }
            @if (TempData["Info"] != null)
            {
                <text>toastr.info('@TempData["Info"]');</text>
        }
    });
</script>