@using pizzashop_Repository.ViewModel
@using pizzashop_Services.ImplementationService

@model FilterPaginationDto<UserViewModel>

<div class="content">
    <div id="UserListTable">
        <div class="row mb-3">
            <div class="col-md-6 d-flex align-items-center">
                <h3>Users</h3>
            </div>
            <div class="col-md-6 d-flex justify-content-md-end">
                @if (PermissionHelper.HasPermission(Context, "Users", false, true, false))
                {
                    <div class="d-flex w-100">
                        <input type="text" class="form-control me-2" placeholder="Search by username" id="searchUser">
                        <a class="btn btn-primary" asp-action="AddNewUser" asp-controller="User">+ Add User</a>
                    </div>
                }
            </div>
        </div>

        <div class="table-responsive">
            <table class="table border bg-white mt-3" style="table-layout: auto; word-wrap: break-word;">
                <thead>
                    <tr>
                        <th scope="col" class="text-start" style="min-width: 150px;">Name
                            <a href="#" data-sort="name_asc" class="sort text-decoration-none">
                                <i class="bi bi-arrow-up"></i>
                            </a>
                            <a href="#" data-sort="name_desc" class="sort text-decoration-none ms-1">
                                <i class="bi bi-arrow-down"></i>
                            </a>
                        </th>
                        <th scope="col" style="min-width: 200px;">Email</th>
                        <th scope="col" style="min-width: 150px;">Phone</th>
                        <th scope="col" style="min-width: 100px;">Role
                            <a href="#" data-sort="role_asc" class="sort text-decoration-none">
                                <i class="bi bi-arrow-up"></i>
                            </a>
                            <a href="#" data-sort="role_desc" class="sort text-decoration-none ms-1">
                                <i class="bi bi-arrow-down"></i>
                            </a>
                        </th>
                        <th scope="col" style="min-width: 100px;">Status</th>
                        <th scope="col" style="min-width: 100px;">Action</th>
                    </tr>
                </thead>
                <tbody id="userTableBody"></tbody>
            </table>
        </div>

        <div class="row mt-3 align-items-center">
            <div class="col-md-6 d-flex align-items-center">
                <label class="me-2">Items Per Page:</label>
                <select id="pageSize" class="form-select" style="width: 80px;">
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                </select>
            </div>
            <div class="col-md-6 text-end">
                <button id="prevPage" class="btn btn-secondary" disabled>&lt;</button>
                <span id="pageInfo"></span>
                <button id="nextPage" class="btn btn-secondary" disabled>&gt;</button>
            </div>
        </div>
    </div>
</div>

<!-- ðŸ”¥ Delete Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<style>
    .table td,
    .table th {
        white-space: normal !important;
        overflow: visible !important;
        word-break: break-word !important;
    }
</style>

<script>
    $(document).ready(function () {
        let currentPage = 1;
        let pageSize = $("#pageSize").val();
        let searchString = "";
        let sortOrder = "";

        function loadUsers() {
            $.ajax({
                url: "/User/GetUsers",
                type: "GET",
                data: { searchString, pageNumber: currentPage, pageSize, sortOrder },
                success: function (data) { updateTable(data); }
            });
        }

        function updateTable(data) {
            let tableBody = $("#userTableBody").empty();

            if (data.items.length === 0) {
                tableBody.append(`<tr><td colspan="6" class="text-center">No users found.</td></tr>`);
                $("#pageInfo").text(`0 of 0`);
                $("#prevPage, #nextPage").prop("disabled", true);
                return;
            }

            data.items.forEach(user => {
                let statusBadge = user.status
                    ? `<span class="badge bg-success">Active</span>`
                    : `<span class="badge bg-danger">Inactive</span>`;

                let row = `
                    <tr>
                        <td class="text-start">
                            <img src="${user.profileImage}" alt="" height="20" width="20" class="rounded-circle me-2">
                            <span>${user.fullName}</span>
                        </td>
                        <td>${user.email}</td>
                        <td>${user.phone}</td>
                        <td>${user.roleName}</td>
                        <td>${statusBadge}</td>
                        <td>
                        @if (PermissionHelper.HasPermission(Context, "Users", false, true, false))
                        {
                                    <a href="/User/EditUser/${user.id}" class="btn p-0">
                                        <i class="bi bi-pencil text-primary"></i>
                                    </a>
                        }
                        @if (PermissionHelper.HasPermission(Context, "Users", false, false, true))
                        {
                                    <button type="button" class="btn p-0 ms-2 deleteUserBtn" data-id="${user.id}">
                                        <i class="bi bi-trash text-danger"></i>
                                    </button>
                        }
                        </td>
                    </tr>
                `;
                tableBody.append(row);
            });

            $("#pageInfo").text(`${data.pageNumber} of ${data.totalPages}`);
            $("#prevPage").prop("disabled", data.pageNumber <= 1);
            $("#nextPage").prop("disabled", data.pageNumber >= data.totalPages);
        }

        $(document).on("click", ".deleteUserBtn", function () {
            let deleteUserId = $(this).data("id");
            $("#confirmDeleteBtn").data("id", deleteUserId);

            let modal = $("#deleteUserModal");
            modal.modal("show").removeAttr("aria-hidden");
            modal.find(".modal-content").attr("tabindex", "-1").focus();
        });

        $("#confirmDeleteBtn").click(function () {
            let deleteUserId = $(this).data("id");

            if (deleteUserId) {
                $.ajax({
                    url: `/User/DeleteUser/${deleteUserId}`,
                    type: "POST",
                    success: function () {
                        $("#deleteUserModal").modal("hide"); // Close modal
                        loadUsers(); // Auto reload user list
                    },
                    error: function () {
                        alert("Error deleting user.");
                    }
                });
            }
        });

        $("#searchUser").on("input", function () { searchString = $(this).val().trim(); currentPage = 1; loadUsers(); });
        $("#pageSize").change(function () { pageSize = $(this).val(); currentPage = 1; loadUsers(); });
        $(".sort").click(function () { sortOrder = $(this).data("sort"); loadUsers(); });
        $("#prevPage").click(function () { if (currentPage > 1) currentPage--; loadUsers(); });
        $("#nextPage").click(function () { currentPage++; loadUsers(); });

        loadUsers();
    });
</script>
